c
exit
n
c
exit
right_wall
left_wall
min_height
n
exit
total
right
left
c
exit
depth
total
right
n
new_right
n
new_right
right
total
left_wall
left-wall
new_left
left
n
right_wall
left_wall
n
right_wall
right
left
exit
left_wall
right
left
heights.count
right_wall
left_wall
left
total
right
riht
left
min_height
right
left
c
cc
c
cc
c
exit
right_wall
left_wall
right
left
total
c
n
right
left
total
n
new_left
left
n
right
left
exit
c
exit
c
n
pt
base
n
pt
base
bsae
c
exit
points
slope_hash
c
exit
!!!
run
exit
potential_words
potential
exit
words_hash['the']
words_hash
potential_words
word
c
exit
potential_words
potential
exit
potential.each_char.each_slice(word_length).map(&:join)
potential.each_char.each_slice(word_length)
potential
word
exit
c
n
s
potential
exit
words_count
potential
exit
potential
n
potential
n
seen_hash
words_hash[word]
words_hash
word
exit
word
c
exit
right
left
c
exit
heights[right]
heights[left]
right
left
curr_area
curr_are
best_area
exit
n
right
left
c
exit
right
n
right
left
exit
right
left
c
exit
curr_area
best_area
c
exit
c
heights[left]
heights[right]
right
left
c
cc
c
exit
right
left
c
exit
c
right - left
left
right
n
left
right
c
cc
c
exit
right
left
c
cc
c
exit
right
left
c
exit
right
left
n
heights[right]
heights[left]
right
left
c
exit
right
left
c
right
left
c
right
left
c
right
left
c
exit
diffs
exit
diffs
diffs[2]
diffs[3]
diffs
exit
diffs
exit
diffs
c
n
diffs
exit
diffs
diffs[3] << 1
diffs[3]
target-num
diffs
exit
diffs
exit
idx2
idx 2
idx1
diffs
two_sum
n
idx1
n
c
diffs
exit
counts[0]
counts
diff
num
c
target
num
diff
