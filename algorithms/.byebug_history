exit
counts[0]
counts
diff
num
c
target
num
diff
counts
coutns
c
exit
min
max
c
min
max
c
min
max
cur_profit
c
cur_profit
exit
max[:val]
min
max
cur_profit
c
exit
idx
min
c
q
'exit
str1.split.sort
str2
str1
exit
item.weight
item
c
exit
last_coin_array[amt]
last_coin_array[amt
last_coin_array[lower]
last_coint[amt]
n
coins_count[amt]
n
optimal
coins_count[amt]
amt
optimal
n
optimal
n
upper
lower_optimal
n
coin
c
coin
exit
amount
exit
amt
last_coin_array
c
coin
amt
last_coin_array
exit
last_coin_array
c
last_coin_array
c
last_coin_array
c
last_coin_array
c
last_coin_array
c
coin
last_coin_array[lower]
last_coin_array
lower
amt
coin
exit
coins_count[-1]
coins_count[lower]
lower_optimal
n
lower_optimal
coins_count[lower]
coins_count lower
coin
c
coins_count[-1]
coins_count[lower]
lower
coins_count
coins_count[13]
coin
amt
exit
coins_count[13]
coins_count[14]
coins_count.length
coin
amt
last_coin_array
coins_count
last_coin
coins_count
amt
coins_count.count
coins_count[-1]
coins_count[8]
lower
amt
coins_count
amt
coin
exit
coins_count
coins_count[-1]
amt
coin
coins_count
lower
c
coins_count
lower
c
upper
lower
coins_count[lower]
coins_count
c
coins_count
exit
coins_count
lower
c
coins_count[lower]
lower
coins_count
c
coins_count[lower]
lower
coins_count[-1]
coins_count.count
coins_count
c
freq
keys
exit
fact
n
fact /= factorial(c)
fact
c
fact
exit
freq.keys
freq
continue
new_perms
